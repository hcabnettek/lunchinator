{"ts":1359495816670,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"\nvar express = require('express'),\n  user = require('./routes/user'),\n  restaurant = require('./routes/restaurant'),\n  http = require('http'),\n  path = require('path'),\n  config = require('./config'),\n  auth = require('./auth'),\n  stylus = require('stylus'),\n  url = require('url');\n\nvar app = express();\n\nvar db = require('./db');\nvar User = db.User;\n\nvar RedisStore = require('connect-redis')(express);\n\napp.configure(function(){\n  var redisUrl = url.parse(process.env.REDISTOGO_URL);\n    //redisAuth = redisUrl.auth.split(':');\n  app.set('redisHost', redisUrl.hostname);\n  app.set('redisPort', redisUrl.port);\n  //app.set('redisDb', redisAuth[0]);\n  //app.set('redisPass', redisAuth[1]);\n});\n\napp.configure(function(){\n  app.set('port', process.env.PORT || 3000);\n  app.set('views', __dirname + '/views');\n  app.set('view engine', 'jade');\n  app.use(stylus.middleware({\n    src: \"\" + __dirname + \"/views\",\n    dest: \"\" + __dirname + \"/public\",\n    compress: true\n  }));\n  app.use(express.favicon());\n  app.use(express.logger('dev'));\n  app.use(express.bodyParser());\n  app.use(express.methodOverride());\n  app.use(express.cookieParser('my super sekret hash'));\n  app.use(express.session({\n    secret: 'my super sekret hash',\n    store: new RedisStore({\n      host: app.get('redisHost'),\n      port: app.get('redisPort')\n      //db: app.get('redisDb'),\n      //pass: app.get('redisPass')\n    })\n  }));\n  app.use(app.router);\n  app.use(express.static(path.join(__dirname, 'public')));\n});\n\napp.configure('development', function(){\n  app.use(express.errorHandler());\n});\n\nvar routes = require('./routes');\n\napp.get('/', auth.cookieCheck, routes.index);\napp.get('/restaurants', restaurant.list);\napp.post('/restaurants', restaurant.create);\napp.get('/user/checkin', user.list);\napp.post('/user/checkin', user.checkin);\napp.post('/user/login', user.login);\n\nhttp.createServer(app).listen(app.get('port'), function(){\n  console.log(\"Express server listening on port \" + app.get('port'));\n});\n"]],"start1":0,"start2":0,"length1":0,"length2":1989}]],"length":1989}
{"contributors":[],"silentsave":false,"ts":1359496069829,"patch":[[{"diffs":[[0,"URL)"],[-1,";"],[1,","],[0,"\n    "],[-1,"//"],[0,"redi"]],"start1":481,"start2":481,"length1":16,"length2":14},{"diffs":[[0,"rl.port);\n  "],[-1,"//"],[0,"app.set('red"]],"start1":601,"start2":601,"length1":26,"length2":24},{"diffs":[[0,"[0]);\n  "],[-1,"//"],[0,"app.set("]],"start1":641,"start2":641,"length1":18,"length2":16},{"diffs":[[0,"isPort')"],[1,","],[0,"\n      "],[-1,"//"],[0,"db: app."]],"start1":1308,"start2":1308,"length1":25,"length2":24},{"diffs":[[0,"    "],[-1,"//"],[0,"pass"]],"start1":1350,"start2":1350,"length1":10,"length2":8}]],"length":1980,"saved":false}
{"contributors":[],"silentsave":false,"ts":1364532005810,"patch":[[{"diffs":[[-1,""],[1,"'use strict';"],[0,"\nvar express"]],"start1":0,"start2":0,"length1":12,"length2":25},{"diffs":[[0,"ss'),\n  "],[-1,"user"],[1,"routes"],[0," = requi"]],"start1":42,"start2":42,"length1":20,"length2":22},{"diffs":[[0,"utes"],[-1,"/user"],[0,"'),\n  "],[-1,"restauran"],[1,"passpor"],[0,"t = "]],"start1":72,"start2":72,"length1":28,"length2":21},{"diffs":[[0,"re('"],[-1,"./routes/restaurant'),\n  http = require('http'),\n  path = require('path'),\n  config = require('./config"],[1,"passport'),\n  localStrategy = require('passport-local').Strategy,\n  crypto = require('crypto'),\n  map = require('./maproutecontroller'),\n  http = require('http"],[0,"'),\n  "],[1,"p"],[0,"a"],[-1,"u"],[0,"th ="]],"start1":98,"start2":98,"length1":119,"length2":175},{"diffs":[[0,"re('"],[-1,"./au"],[1,"pa"],[0,"th')"]],"start1":279,"start2":279,"length1":12,"length2":10},{"diffs":[[0,"rl')"],[-1,";\n\nvar app = express();\n\nvar db = require('./db');\n"],[1,",\n  odm = require('./db'),\n  RedisStore = require('connect-redis')(express);\n\nfunction ensureAuthenticated(req, res, next){\n  if(req.isAuthenticated()){ return next();}\n  res.redirect('/login');\n}\n\npassport.serializeUser(function(user, done){\n  done(null, user.id);\n});\n\npassport.deserializeUser(function(id, done){\n  odm.User.findById(id, function(err, user){\n    if(err) {console.log(err); }\n    "],[0,"var "],[-1,"User = db.User;\n\nvar RedisStore = require('connect-redis')("],[1,"deserialized = {\n      id: id,\n      username: user.UserName,\n      password: user.Password\n    };\n\n    done(err, deserialized);\n  });\n});\n\npassport.use(new localStrategy(function(username, password, done){\n\n  odm.User.findOne({UserName: username}, '_id Password Salt UserName Email', function(err, doc){\n    if(err) {\n      return done(err);\n    }\n\n    var newhash = crypto.createHash('sha512')\n                    .update(doc.Salt + password)\n                    .digest('hex');\n\n    if(doc.Password === newhash){\n      var user = {\n        id: doc._id,\n        username: username,\n        password: newhash\n      };\n\n      return done(null, user);\n    } else {\n      return done(null, false, {message: 'Invalid password'});\n    }\n\n  });\n}));\n\nvar app = "],[0,"express"],[1,"("],[0,");\n"],[-1,"\n"],[0,"app."]],"start1":339,"start2":339,"length1":133,"length2":1177},{"diffs":[[0,"split(':');\n"],[1,"\n"],[0,"  app.set('r"]],"start1":1623,"start2":1623,"length1":24,"length2":25},{"diffs":[[0,"   src: "],[-1,"\"\""],[1,"''"],[0," + __dir"]],"start1":1975,"start2":1975,"length1":18,"length2":18},{"diffs":[[0,"e + "],[-1,"\""],[1,"'"],[0,"/views"],[-1,"\""],[1,"'"],[0,",\n  "]],"start1":1996,"start2":1996,"length1":16,"length2":16},{"diffs":[[0,"st: "],[-1,"\"\""],[1,"''"],[0," + _"]],"start1":2016,"start2":2016,"length1":10,"length2":10},{"diffs":[[0,"e + "],[-1,"\""],[1,"'"],[0,"/public"],[-1,"\""],[1,"'"],[0,",\n  "]],"start1":2033,"start2":2033,"length1":17,"length2":17},{"diffs":[[0,"edisPort'),\n"],[1,"      client: require('redis').createClient(),\n"],[0,"      db: ap"]],"start1":2413,"start2":2413,"length1":24,"length2":71},{"diffs":[[0,")\n    })\n  }));\n"],[1,"  app.use(passport.initialize());\n  app.use(passport.session());\n"],[0,"  app.use(app.ro"]],"start1":2533,"start2":2533,"length1":32,"length2":97},{"diffs":[[0,");\n\n"],[-1,"var routes = require('./routes');\n\napp.get('/', auth.cookieCheck, routes.index);\napp.get('/restaurants', restaurant.list);\napp.post('/restaurants"],[1,"app.get('/', routes.index);\napp.get('/partials/:area/:view', routes.partials);\n\nvar prefixes = ['user"],[0,"', "],[1,"'"],[0,"rest"]],"start1":2778,"start2":2778,"length1":156,"length2":113},{"diffs":[[0,"rant"],[-1,".create);\napp.get('/user/checkin', user.list);\napp.post('/user/checkin', user.checkin);\napp.post('/user/login', user.login"],[1,"', 'lunch'];\nprefixes.forEach(function(prefix){\n  map.mapRoute(app, prefix);\n}"],[0,");\n\n"]],"start1":2893,"start2":2893,"length1":130,"length2":86},{"diffs":[[0,"ole.log("],[-1,"\""],[1,"'"],[0,"Express "]],"start1":3044,"start2":3044,"length1":17,"length2":17},{"diffs":[[0,"ort "],[-1,"\""],[1,"'"],[0," + a"]],"start1":3082,"start2":3082,"length1":9,"length2":9}]],"length":3112,"saved":false}
