{"ts":1359495802349,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var mongoose = require('mongoose'),\n  Schema = mongoose.Schema;\n\nvar restaurantSchema = new Schema({\n\tName: String,\n\tAddress: String,\n\tUrl: String\n});\n\nvar userCheckInSchema = new Schema({\n\tUser: {type:Schema.Types.ObjectId, ref: 'User'},\n\tLunch: {type:Schema.Types.ObjectId, ref: 'Lunch'}\n});\n\nvar userSchema = new Schema({\n\tName: String,\n\tEmail: String,\n\tPassword: String,\n\tLunches : [{type:Schema.Types.ObjectId, ref: 'Lunch'}]\n});\n\nvar lunchSchema = new Schema({\n\tRestaurant : { type: Schema.Types.ObjectId, ref: 'Restaurant' },\n\tCreator: {type:Schema.Types.ObjectId, ref: 'User'},\n\tDate: {type: Date, default: Date.now},\n\tInvites: [{type:Schema.Types.ObjectId, ref: 'User'}],\n\tCheckInUsers: [{type:Schema.Types.ObjectId, ref: 'CheckedInUser'}],\n\tVotes: {up: Number, down: Number}\n});\n\nconsole.log(process.env.MONGOHQ_URL);\nmongoose.connect(process.env.MONGOHQ_URL);\nexports.Restaurant = mongoose.model('Restaurant', restaurantSchema, 'Restaurant');\nexports.CheckedInUser = mongoose.model('CheckedInUser', userCheckInSchema, 'CheckedInUser');\nexports.User = mongoose.model('User', userSchema, 'User');\nexports.Lunch = mongoose.model('Lunch', lunchSchema, 'Lunch');"]],"start1":0,"start2":0,"length1":0,"length2":1168}]],"length":1168}
